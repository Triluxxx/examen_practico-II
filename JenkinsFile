pipeline {
    agent any

    environment {
        MAVEN_HOME = 'MAVEN_SYSTEM'
        JAVA_HOME = 'JAVA_SYSTEM_11'
        SONAR_TOKEN = 'token'
        BRANCH_NAME = "${env.BRANCH_NAME}"
        DEPLOY_ENV = 'des'
    }

    tools {
        maven "${MAVEN_HOME}"
    }

    stages {
        stage('Clone') {
            steps {
                git 'https://github.com/Triluxxx/examen_practico-II.git'
            }
        }
        
        stage('Check branch') {
            steps {
                script {
                    def branch = env.BRANCH_NAME
                    def enviro = env.DEPLOY_ENV
                    if (!(enviro == "des" || (branch == "develop" || branch == "master" || branch.startsWith("release/")))) {
                        error "Branch [${branch}] is NOT valid to be deployed in [${enviro}]"
                    }
                }
            }
        }

        stage('Build') {
            steps {
                sh "mvn -DskipTests clean package -f micro-product/pom.xml"
            }
        }

        stage('Test') {
            steps {
                sh "mvn test -f micro-product/pom.xml"
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Sonar') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh "mvn sonar:sonar -Pcoverage -Dsonar.login=${env.SONAR_TOKEN} -f micro-product/pom.xml"
                }
            }
        }

        stage('Deploy') {
            steps {
                sh "mvn spring-boot:run -f micro-product/pom.xml"
            }
        }
    }
}
